<?php
/**
 * Created by PhpStorm.
 * User: eugeniy
 * Date: 23.12.17
 * Time: 18:06
 */
    require_once "zs_index/SiteheaderPage.class.php";

    class CompanyAddProductPage extends SiteHeader {

        // Если действия успешные, то тут будет уведомление об этом
        private $good;

        // Тут находится сообщение если что то пошло не так
        private $error;

        // Id добавляемого продукта
        private $productid;

        // То что ищет продавец
        private $searchstring;

        // Таблица с результатами поиска
        private $resulttable;

        // Название добовляемого продукта
        private $productname;

        // Опциональна
        private $babestring;

        // Форма с заполением атрибутов
        private $attrform;

        // Форма для выбора склада
        private $stocksection;

        private function PrepareProductAttributes()
        {
            if ($this->productid > 0)
            {
                $this->query = $this->database->prepare("SELECT ProductName FROM CompanyGetGoodName WHERE ProductId = :Id", array(PDO::ATTR_CURSOR => PDO::CURSOR_SCROLL));
                $this->query->bindParam(":Id", $this->productid);

                $this->query->execute();
                $this->productname = $this->query->fetch()[0];

                $this->query = $this->database->prepare("SELECT * FROM CompanyGoodsAttributes WHERE ProductId = :Id", array(PDO::ATTR_CURSOR => PDO::CURSOR_SCROLL));
                $this->query->bindParam(":Id", $this->productid);

                $this->query->execute();
                while ($this->result = $this->query->fetch(PDO::FETCH_NUM, PDO::FETCH_ORI_NEXT)) {
                    $this->smarty->assign('id', $this->result[0]);
                    $this->smarty->assign('name', $this->result[1]);

                    $this->attrform .= $this->smarty->fetch("company-add-product-attribute.tpl");
                }

                $this->query = $this->database->prepare("SELECT id, Name, CompanyId FROM AccoutGetStock WHERE CompanyId = :Id", array(PDO::ATTR_CURSOR => PDO::CURSOR_SCROLL));
                $this->query->bindParam(":Id", $this->CheckUserCompany());

                $this->query->execute();
                while ($this->result = $this->query->fetch(PDO::FETCH_NUM, PDO::FETCH_ORI_NEXT)) {
                    $this->smarty->assign('id', $this->result[0]);
                    $this->smarty->assign('name', $this->result[1]);

                    $this->stocksection .= $this->smarty->fetch("company-add-product-section.tpl");
                }
            }
        }

        private function PrepareResultTable()
        {
            if ($this->searchstring != "")
            {
                $searchwords = explode(" ", strtolower($this->searchstring));

                foreach ($searchwords as $pointer)
                {
                    $this->babestring .= "(Name LIKE '%". $pointer . "%') AND ";
                }

                $this->babestring .= '(id > 0)';

                $this->query = $this->database->prepare("SELECT * FROM CompanyGoodsSearch WHERE ". $this->babestring, array(PDO::ATTR_CURSOR => PDO::CURSOR_SCROLL));
                $this->query->execute();

                while ($this->result = $this->query->fetch(PDO::FETCH_NUM, PDO::FETCH_ORI_NEXT)) {
                    $this->smarty->assign('id', $this->result[0]);
                    $this->smarty->assign('name', $this->result[1]);
                    $this->smarty->assign('brandname', $this->result[2]);
                    $this->smarty->assign('sectionname', $this->result[3]);

                    $this->resulttable .= $this->smarty->fetch("company-add-product-result-table.tpl");
                }
            }
        }

        private function Build()
        {
            $this->smarty->assign("good", $this->good);
            $this->smarty->assign("error", $this->error)
            ;
            $this->smarty->assign("resulttable", $this->resulttable);
            $this->smarty->assign("attrform", $this->attrform);
            $this->smarty->assign("productname", $this->productname);
            $this->smarty->assign("productid", $this->productid);
            $this->smarty->assign("stocksection", $this->stocksection);

            return $this->smarty->fetch("company-add-product.tpl");
        }

        public function Draw()
        {

            parent::Draw($this->Build()); // TODO: Change the autogenerated stub
        }

        public function __construct($search, $id)
        {
            global $ROOT_PATH;
            parent::__construct("Добавление товара");

            $this->productid = $id;
            $this->searchstring = $search;

            if ((!$this->session->isUser()) || ($this->CheckUserCompany() < 1))
                header('Location: http://'.$ROOT_PATH.'/Index.php');

            if (isset($_GET['good'])) {
                $this->good = htmlspecialchars($_GET['good']);
            } else {
                $this->good = null;
            }

            if (isset($_GET['error'])) {
                $this->error = htmlspecialchars($_GET['error']);
            } else {
                $this->error = null;
            }

            $this->PrepareResultTable();
            $this->PrepareProductAttributes();
        }
    }
?>